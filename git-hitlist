#!/usr/bin/env perl
use strict;
use warnings;
use open qw/ :std :encoding(UTF-8) /;
use autodie;
use File::Temp 'tempfile';
use Getopt::Long;

sub usage {
    return <<USAGE;
git-hitlist [--staged] [paths]
git-hitlist <commit> [<commit>] [paths]

Open vim with all the files touched by the unstaged changes, staged changes
(with --staged), or the specified commit.  If two commits are
specified, the diff of the two will be used.  The quickfix list is populated
with the first line of each patch hunk for easier jumping around.

If any paths are specified, changed hunks are limited to those touching the
specified paths.

--staged    Use staged changes instead of unstaged changes
--cached    Ditto
--help      Show this help
USAGE
}

sub revparse {
    open my $revparse, "-|", qw(git rev-parse), @_;
    my @lines = map { chomp; $_ } <$revparse>;
    return @lines[0 .. $#lines];
}

my (@opts, $use_staged);
GetOptions(
    'cached|staged' => \$use_staged,
    'help'          => sub { print usage(); exit 0 },
) or die usage();

my @revs  = revparse("--revs-only", @ARGV);
my @files = revparse("--no-revs", "--no-flags", @ARGV);

if ($use_staged) {
    if (@revs) {
        warn "Commit not allowed when --staged is specified.\n\n";
        die usage();
    }
    push @opts, "--cached";
}
elsif (@revs) {
    # Turn a single commit into a range of one.
    unshift @revs, "$revs[0]~"
        if @revs == 1;
}

open my $diff, "-|", qw(git diff --no-ext-diff -U0), @opts, @revs, @files;

my (@hitlist, %file, %line);
while (<$diff>) {
    if (/^--- a\/(.+)/) {
        $file{"-"} = $1;
    } elsif (/^\+\+\+ b\/(.+)/) {
        $file{"+"} = $1;
    } elsif (/^@@ -(\d+)(?:,\d+)? \+(\d+)/) {
        %line = ("-" => $1, "+" => $2);
    } elsif (/^([-+])/) {
        next unless %line;
        chomp;
        push @hitlist, "$file{$1}:$line{$1}:$_";
        %line = ();
    }
}
close $diff;

unless (@hitlist) {
    warn "Nothing to whack.",
         ($use_staged ? "" : " (Perhaps you meant to use --staged?)"),
         "\n";
    exit;
}

my ($tmpfh, $tmpfn) = tempfile();
print { $tmpfh } "$_\n" for @hitlist;
close $tmpfh;

# git-diff paths are always relative to the top-level of the clone
my $gitcd = revparse("--show-cdup");
chdir "./$gitcd";

system "vim", "-q", $tmpfn;
unlink $tmpfn;
